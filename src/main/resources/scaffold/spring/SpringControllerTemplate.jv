package @{mvcPackage};

import java.lang.reflect.Field;
import java.util.List;

import @{entity.getQualifiedName()};
import @{topLevelPackage}.repo.@{entity.getName()}Dao;
@foreach{clazz : entityClasses}
import @{topLevelPackage}.repo.@{clazz}Dao;
@end{}

import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
@RequestMapping("/@{entityPlural.toLowerCase()}")
public class @{entity.getName()}Controller
{

	// Inject the appropriate data-access object for the given entity.
	
    @Autowired
	private @{entity.getName()}Dao @{ccEntity}Dao;
	@if{!entityNames.isEmpty() && !entityClasses.isEmpty() && !ccEntityClasses.isEmpty()}
	// Inject data-access objects for any inter-entity relationships.
	@foreach{clazz : entityClasses, ccClazz : ccEntityClasses}
	@Autowired
	private @{clazz}Dao @{ccClazz}Dao;
	@end{}
	@else{}
	@end{}
	@RequestMapping(method=RequestMethod.GET)
	public @ModelAttribute("@{entityPlural.toLowerCase()}")
	List<@{entity.getName()}> view@{entityPlural}(@ModelAttribute("search") @{entity.getName()} search, @RequestParam(required=false) Long first, 
			@RequestParam(required=false) Integer max, Model model)
	{
		if (max == null || max <= 0)
		{
			max = 10;
		}

		if (first == null || first < 0)
		{
			first = 0l;
		}

		Long count = this.@{ccEntity}Dao.getCount(search);

		Long pages = Math.round(count.doubleValue()/max);

		if (pages == 0)
		{
			pages++;
		}

		Long current = (first/max) + 1;

		model.addAttribute("first", first);
      	model.addAttribute("last", first + max - 1);
      	model.addAttribute("current", current);
      	model.addAttribute("max", max);
      	model.addAttribute("count", count);

		List<@{entity.getName()}> @{entityPlural.toLowerCase()} = @{ccEntity}Dao.search(search, first, max);
		@foreach{name : entityNames, ccClass : ccEntityClasses}
		model.addAttribute("@{name}", @{ccClass}Dao.getAll());
		@end{} 
		return @{entityPlural.toLowerCase()};
	}
	
	@RequestMapping(method=RequestMethod.POST, params="search")
	public @ModelAttribute("@{entityPlural.toLowerCase()}")
	List<@{entity.getName()}> search@{entity.getName()}(@ModelAttribute("search") @{entity.getName()} search, @RequestParam(required=false) Long first, 
			@RequestParam(required=false) Integer max, Model model)
	{
		if (max == null || max <= 0)
		{
			max = 10;
		}

		if (first == null || first < 0)
		{
			first = 0l;
		}

		Long count = this.@{ccEntity}Dao.getCount(search);

		Long pages = Math.round(count.doubleValue()/max);

		if (pages == 0)
		{
			pages++;
		}

		Long current = Math.round(first.doubleValue()*pages/count.doubleValue());

		if (current == 0)
		{
			current++;
		}

		model.addAttribute("first", first);
      	model.addAttribute("last", first + max - 1);
      	model.addAttribute("current", current);
      	model.addAttribute("max", max);
      	model.addAttribute("count", count);

		List<@{entity.getName()}> @{entityPlural.toLowerCase()} = @{ccEntity}Dao.search(search, first, max);
		@foreach{name : entityNames, ccClass : ccEntityClasses}
		model.addAttribute("@{name}", @{ccClass}Dao.getAll());
		@end{} 
		return @{entityPlural.toLowerCase()};
	}

	@RequestMapping(value="/{id}", method=RequestMethod.GET)
	public String view@{entity.getName()}(@PathVariable("id") Long id, Model model, @RequestParam(required=false) String edit)
	{
		@{entity.getName()} @{ccEntity} = @{ccEntity}Dao.getById(id);
		model.addAttribute("@{ccEntity}", @{ccEntity});
		@foreach{name : entityNames, ccClass : ccEntityClasses}
		model.addAttribute("@{name}", @{ccClass}Dao.getAll());
		@end{} 

		if (edit == null || !edit.equals("true"))
		{
			return "view@{entity.getName()}";
		}

		else
		{
			return "edit@{entity.getName()}";
		}
	}

	@RequestMapping(value="/{id}", method=RequestMethod.POST)
	public String update@{entity.getName()}(@PathVariable("id") Long id, @{entity.getName()} @{ccEntity})
	{
		@{ccEntity}Dao.update(@{ccEntity});
		return "view@{entity.getName()}";
	}

	@RequestMapping(value="/{id}/delete", method=RequestMethod.POST)
	public String delete@{entity.getName()}(@PathVariable("id") Long id, @{entity.getName()} @{ccEntity})
	{
		@{ccEntity}Dao.delete(id);
		return "redirect:@{targetDir}@{entityPlural.toLowerCase()}";
	}

	@RequestMapping(value="/create", method=RequestMethod.GET)
	public String create@{entity.getName()}(Model model, HttpSession session)
	{
		@foreach{name : entityNames, ccClass : ccEntityClasses}
		model.addAttribute("@{name}", @{ccClass}Dao.getAll());
		@end{} 
		if(session.getAttribute("@{ccEntity}") != null){
			model.addAttribute("@{ccEntity}", session.getAttribute("@{ccEntity}"));
			session.removeAttribute("@{ccEntity}");
		}
		else
		{
			model.addAttribute("@{ccEntity}", new @{entity.getName()}());
		}
		return "create@{entity.getName()}";
	}

	@RequestMapping(value="/create", method=RequestMethod.POST)
	public String create@{entity.getName()}(@{entity.getName()} @{ccEntity})
	{
		@foreach{name : notntomany}
			if(@{ccEntity}.get@{name.substring(0,1).toUpperCase()}@{name.substring(1)}().getId() == null){
				@{ccEntity}.set@{name.substring(0,1).toUpperCase()}@{name.substring(1)}(null);
			}
		@end{}
		@{ccEntity}Dao.create(@{ccEntity});
		return "redirect:@{targetDir}@{entityPlural.toLowerCase()}";
	}
	
	@RequestMapping(method=RequestMethod.POST, params="create")
	public String createNew@{entity.getName()}(@ModelAttribute("search") @{entity.getName()} search, HttpSession session)
	{
		session.setAttribute("@{ccEntity}", search);
		return "redirect:@{targetDir}@{entityPlural.toLowerCase()}/create";
	}
}
